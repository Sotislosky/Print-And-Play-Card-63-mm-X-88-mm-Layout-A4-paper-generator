<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Card Layout for Printing</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.4.0/jspdf.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>
    <style>
        body {
            font-family: Arial, sans-serif;
            text-align: center;
        }
        .card-container {
            display: grid;
            grid-template-columns: repeat(3, 63mm);
            grid-template-rows: repeat(3, 88mm);
            gap: 5px;
            width: 210mm;
            height: 297mm;
            border: 1px solid #000;
            margin: 20px auto;
            page-break-after: always;
        }
        .card-container img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }
        input[type="file"], button {
            margin-top: 20px;
        }
    </style>
</head>
<body>
    <h1>Upload Your Cards</h1>
    <input type="file" id="file-input" accept="image/*" multiple>
    <button onclick="saveAsPDF()">Download as PDF</button>
    <div id="card-output"></div>

    <script>
        const fileInput = document.getElementById('file-input');
        const cardOutput = document.getElementById('card-output');

        fileInput.addEventListener('change', (event) => {
            const files = event.target.files;
            if (files.length === 0) return;

            // Clear previous cards
            cardOutput.innerHTML = '';

            // Split files into groups of 9
            const fileGroups = [];
            for (let i = 0; i < files.length; i += 9) {
                fileGroups.push(Array.from(files).slice(i, i + 9));
            }

            // Create a container for each group of cards
            fileGroups.forEach(group => {
                const cardContainer = document.createElement('div');
                cardContainer.classList.add('card-container');

                group.forEach(file => {
                    const img = document.createElement('img');
                    img.src = URL.createObjectURL(file);
                    cardContainer.appendChild(img);
                });

                cardOutput.appendChild(cardContainer);
            });
        });

        async function saveAsPDF() {
            const { jsPDF } = window.jspdf;
            const pdf = new jsPDF('portrait', 'mm', 'a4');

            const cardContainers = document.querySelectorAll('.card-container');
            if (cardContainers.length === 0) return;

            for (let i = 0; i < cardContainers.length; i++) {
                const canvas = await html2canvas(cardContainers[i], { scale: 2 });
                const imgData = canvas.toDataURL('image/png');
                pdf.addImage(imgData, 'PNG', 0, 0, 210, 297);
                if (i < cardContainers.length - 1) {
                    pdf.addPage();
                }
            }

            pdf.save('cards_layout.pdf');
        }
    </script>
</body>
</html>
